{
  "paragraphs": [
    {
      "text": "%pyspark\nfrom string import Template\nfrom collections import defaultdict\nfrom SPARQLWrapper import SPARQLWrapper, JSON\n#import matplotlib.pyplot as plt\n#import seaborn as sns\n\n#import urllib2\n#proxy \u003d urllib2.ProxyHandler({\u0027http\u0027: \u0027gateway.ad.renci.org:8080\u0027})\n#opener \u003d urllib2.build_opener(proxy)\n#urllib2.install_opener(opener)\n\nblazegraph_uri \u003d \"http://stars-blazegraph.renci.org/bigdata/sparql\"\nblazegraph \u003d SPARQLWrapper (blazegraph_uri)\ndef query_sparql (query, service\u003dblazegraph):\n    service.setQuery (query)\n    service.setReturnFormat (JSON)\n    return service.query().convert ()\n    \nquery \u003d Template (\"\"\"\nPREFIX db_resource: \u003chttp://chem2bio2rdf.org/drugbank/resource/\u003e\nSELECT ?generic_name ?protein\nWHERE {\n  ?interaction db_resource:SwissProt_ID ?protein .\n  ?interaction db_resource:DBID         ?drug .\n  ?drug        db_resource:Generic_Name ?generic_name .\n  FILTER regex(?generic_name, \"${drugs}\", \"i\")\n}\"\"\")\ndrug_list \u003d \"Creatine|Baclofen|Amlodipine|Brimonidine|Acetaminophen|Aspirin\"\nresults \u003d query_sparql ( query.substitute (drugs\u003ddrug_list))",
      "user": "ad\\hongyi",
      "dateUpdated": "Mar 27, 2017 10:40:22 AM",
      "config": {
        "colWidth": 12.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "python"
        },
        "editorMode": "ace/mode/python"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "jobName": "paragraph_1487641452141_-374648616",
      "id": "20170220-204412_131187424",
      "dateCreated": "Feb 20, 2017 8:44:12 PM",
      "dateStarted": "Mar 27, 2017 10:40:22 AM",
      "dateFinished": "Mar 27, 2017 10:40:22 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%pyspark\ndrug_protein \u003d defaultdict(list)\nprotein_drug \u003d defaultdict(list)\nfor r in results[\"results\"][\"bindings\"]:\n    drug \u003d r[\u0027generic_name\u0027][\u0027value\u0027]\n    protein \u003d r[\u0027protein\u0027][\u0027value\u0027].rsplit(\u0027/\u0027, 1)[-1]\n    if protein !\u003d \u0027Not_available\u0027:\n        drug_protein[drug].append (protein)\n        protein_drug[protein].append (drug)",
      "user": "ad\\hongyi",
      "dateUpdated": "Mar 27, 2017 10:40:25 AM",
      "config": {
        "colWidth": 12.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "python"
        },
        "editorMode": "ace/mode/python"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "jobName": "paragraph_1487641481791_-459632150",
      "id": "20170220-204441_1098491422",
      "dateCreated": "Feb 20, 2017 8:44:41 PM",
      "dateStarted": "Mar 27, 2017 10:40:25 AM",
      "dateFinished": "Mar 27, 2017 10:40:25 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%pyspark\nseen_prot \u003d []\nseen_drug \u003d []\ncode_gen \u003d []\nfor p in protein_drug:\n    if not p in seen_prot:\n        code_gen.append (\"    graph.addNode (\u0027{0}\u0027, {{ url : \u0027http://www.uniprot.org/uniprot/{1}\u0027 }});\".format (p, p))\n        seen_prot.append (p)\n    for d in protein_drug[p]:\n        if not d in seen_drug:\n            code_gen.append (\"    graph.addNode (\u0027{0}\u0027);\".format (d))\n            seen_drug.append (d)\n        code_gen.append (\"    graph.addLink (\u0027{0}\u0027, \u0027{1}\u0027);\".format (p, d))\nprint (code_gen)\nprint (Template (\"\"\"%html\n\u003cscript type\u003d\"text/javascript\" src\u003d\"https://stars.renci.org/app/greendatatranslator/blackboard/src/vivagraph/vivagraph.min.js\"\u003e\u003c/script\u003e\n\u003cscript type\u003d\"text/javascript\"\u003e\n    var graph \u003d Viva.Graph.graph();\n    ${code_gen}\n    var renderer \u003d Viva.Graph.View.renderer(graph, {\n        container: document.getElementById(\u0027graphDiv\u0027)\n    });    \n    renderer.run();\n\u003c/script\u003e\n\u003cp id\u003d\u0027graphDiv\u0027 height\u003d\u0027500\u0027 \u003e\u003c/p\u003e\"\"\").safe_substitute (code_gen\u003d\"\\n\".join (code_gen)))",
      "user": "ad\\hongyi",
      "dateUpdated": "Mar 27, 2017 10:40:28 AM",
      "config": {
        "colWidth": 12.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "python"
        },
        "editorMode": "ace/mode/python"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "[\"    graph.addNode (\u0027P06732\u0027, { url : \u0027http://www.uniprot.org/uniprot/P06732\u0027 });\", \"    graph.addNode (\u0027Creatine\u0027);\", \"    graph.addLink (\u0027P06732\u0027, \u0027Creatine\u0027);\", \"    graph.addNode (\u0027P12277\u0027, { url : \u0027http://www.uniprot.org/uniprot/P12277\u0027 });\", \"    graph.addLink (\u0027P12277\u0027, \u0027Creatine\u0027);\", \"    graph.addNode (\u0027P50440\u0027, { url : \u0027http://www.uniprot.org/uniprot/P50440\u0027 });\", \"    graph.addLink (\u0027P50440\u0027, \u0027Creatine\u0027);\", \"    graph.addNode (\u0027P18825\u0027, { url : \u0027http://www.uniprot.org/uniprot/P18825\u0027 });\", \"    graph.addNode (\u0027Brimonidine\u0027);\", \"    graph.addLink (\u0027P18825\u0027, \u0027Brimonidine\u0027);\", \"    graph.addNode (\u0027Q06432\u0027, { url : \u0027http://www.uniprot.org/uniprot/Q06432\u0027 });\", \"    graph.addNode (\u0027Amlodipine\u0027);\", \"    graph.addLink (\u0027Q06432\u0027, \u0027Amlodipine\u0027);\", \"    graph.addNode (\u0027P00915\u0027, { url : \u0027http://www.uniprot.org/uniprot/P00915\u0027 });\", \"    graph.addLink (\u0027P00915\u0027, \u0027Amlodipine\u0027);\", \"    graph.addNode (\u0027P18089\u0027, { url : \u0027http://www.uniprot.org/uniprot/P18089\u0027 });\", \"    graph.addLink (\u0027P18089\u0027, \u0027Brimonidine\u0027);\", \"    graph.addNode (\u0027Q9UBS5\u0027, { url : \u0027http://www.uniprot.org/uniprot/Q9UBS5\u0027 });\", \"    graph.addNode (\u0027Baclofen\u0027);\", \"    graph.addLink (\u0027Q9UBS5\u0027, \u0027Baclofen\u0027);\", \"    graph.addNode (\u0027Q00975\u0027, { url : \u0027http://www.uniprot.org/uniprot/Q00975\u0027 });\", \"    graph.addLink (\u0027Q00975\u0027, \u0027Amlodipine\u0027);\", \"    graph.addNode (\u0027P35354\u0027, { url : \u0027http://www.uniprot.org/uniprot/P35354\u0027 });\", \"    graph.addNode (\u0027Acetaminophen\u0027);\", \"    graph.addLink (\u0027P35354\u0027, \u0027Acetaminophen\u0027);\", \"    graph.addNode (\u0027Aspirin\u0027);\", \"    graph.addLink (\u0027P35354\u0027, \u0027Aspirin\u0027);\", \"    graph.addNode (\u0027P17540\u0027, { url : \u0027http://www.uniprot.org/uniprot/P17540\u0027 });\", \"    graph.addLink (\u0027P17540\u0027, \u0027Creatine\u0027);\", \"    graph.addNode (\u0027P08913\u0027, { url : \u0027http://www.uniprot.org/uniprot/P08913\u0027 });\", \"    graph.addLink (\u0027P08913\u0027, \u0027Brimonidine\u0027);\", \"    graph.addNode (\u0027P12532\u0027, { url : \u0027http://www.uniprot.org/uniprot/P12532\u0027 });\", \"    graph.addLink (\u0027P12532\u0027, \u0027Creatine\u0027);\", \"    graph.addNode (\u0027O75899\u0027, { url : \u0027http://www.uniprot.org/uniprot/O75899\u0027 });\", \"    graph.addLink (\u0027O75899\u0027, \u0027Baclofen\u0027);\", \"    graph.addNode (\u0027P48029\u0027, { url : \u0027http://www.uniprot.org/uniprot/P48029\u0027 });\", \"    graph.addLink (\u0027P48029\u0027, \u0027Creatine\u0027);\", \"    graph.addNode (\u0027Q14353\u0027, { url : \u0027http://www.uniprot.org/uniprot/Q14353\u0027 });\", \"    graph.addLink (\u0027Q14353\u0027, \u0027Creatine\u0027);\", \"    graph.addNode (\u0027P23219\u0027, { url : \u0027http://www.uniprot.org/uniprot/P23219\u0027 });\", \"    graph.addLink (\u0027P23219\u0027, \u0027Acetaminophen\u0027);\", \"    graph.addLink (\u0027P23219\u0027, \u0027Aspirin\u0027);\"]\n"
          },
          {
            "type": "HTML",
            "data": "\u003cscript type\u003d\"text/javascript\" src\u003d\"https://stars.renci.org/app/greendatatranslator/blackboard/src/vivagraph/vivagraph.min.js\"\u003e\u003c/script\u003e\n\u003cscript type\u003d\"text/javascript\"\u003e\n    var graph \u003d Viva.Graph.graph();\n        graph.addNode (\u0027P06732\u0027, { url : \u0027http://www.uniprot.org/uniprot/P06732\u0027 });\n    graph.addNode (\u0027Creatine\u0027);\n    graph.addLink (\u0027P06732\u0027, \u0027Creatine\u0027);\n    graph.addNode (\u0027P12277\u0027, { url : \u0027http://www.uniprot.org/uniprot/P12277\u0027 });\n    graph.addLink (\u0027P12277\u0027, \u0027Creatine\u0027);\n    graph.addNode (\u0027P50440\u0027, { url : \u0027http://www.uniprot.org/uniprot/P50440\u0027 });\n    graph.addLink (\u0027P50440\u0027, \u0027Creatine\u0027);\n    graph.addNode (\u0027P18825\u0027, { url : \u0027http://www.uniprot.org/uniprot/P18825\u0027 });\n    graph.addNode (\u0027Brimonidine\u0027);\n    graph.addLink (\u0027P18825\u0027, \u0027Brimonidine\u0027);\n    graph.addNode (\u0027Q06432\u0027, { url : \u0027http://www.uniprot.org/uniprot/Q06432\u0027 });\n    graph.addNode (\u0027Amlodipine\u0027);\n    graph.addLink (\u0027Q06432\u0027, \u0027Amlodipine\u0027);\n    graph.addNode (\u0027P00915\u0027, { url : \u0027http://www.uniprot.org/uniprot/P00915\u0027 });\n    graph.addLink (\u0027P00915\u0027, \u0027Amlodipine\u0027);\n    graph.addNode (\u0027P18089\u0027, { url : \u0027http://www.uniprot.org/uniprot/P18089\u0027 });\n    graph.addLink (\u0027P18089\u0027, \u0027Brimonidine\u0027);\n    graph.addNode (\u0027Q9UBS5\u0027, { url : \u0027http://www.uniprot.org/uniprot/Q9UBS5\u0027 });\n    graph.addNode (\u0027Baclofen\u0027);\n    graph.addLink (\u0027Q9UBS5\u0027, \u0027Baclofen\u0027);\n    graph.addNode (\u0027Q00975\u0027, { url : \u0027http://www.uniprot.org/uniprot/Q00975\u0027 });\n    graph.addLink (\u0027Q00975\u0027, \u0027Amlodipine\u0027);\n    graph.addNode (\u0027P35354\u0027, { url : \u0027http://www.uniprot.org/uniprot/P35354\u0027 });\n    graph.addNode (\u0027Acetaminophen\u0027);\n    graph.addLink (\u0027P35354\u0027, \u0027Acetaminophen\u0027);\n    graph.addNode (\u0027Aspirin\u0027);\n    graph.addLink (\u0027P35354\u0027, \u0027Aspirin\u0027);\n    graph.addNode (\u0027P17540\u0027, { url : \u0027http://www.uniprot.org/uniprot/P17540\u0027 });\n    graph.addLink (\u0027P17540\u0027, \u0027Creatine\u0027);\n    graph.addNode (\u0027P08913\u0027, { url : \u0027http://www.uniprot.org/uniprot/P08913\u0027 });\n    graph.addLink (\u0027P08913\u0027, \u0027Brimonidine\u0027);\n    graph.addNode (\u0027P12532\u0027, { url : \u0027http://www.uniprot.org/uniprot/P12532\u0027 });\n    graph.addLink (\u0027P12532\u0027, \u0027Creatine\u0027);\n    graph.addNode (\u0027O75899\u0027, { url : \u0027http://www.uniprot.org/uniprot/O75899\u0027 });\n    graph.addLink (\u0027O75899\u0027, \u0027Baclofen\u0027);\n    graph.addNode (\u0027P48029\u0027, { url : \u0027http://www.uniprot.org/uniprot/P48029\u0027 });\n    graph.addLink (\u0027P48029\u0027, \u0027Creatine\u0027);\n    graph.addNode (\u0027Q14353\u0027, { url : \u0027http://www.uniprot.org/uniprot/Q14353\u0027 });\n    graph.addLink (\u0027Q14353\u0027, \u0027Creatine\u0027);\n    graph.addNode (\u0027P23219\u0027, { url : \u0027http://www.uniprot.org/uniprot/P23219\u0027 });\n    graph.addLink (\u0027P23219\u0027, \u0027Acetaminophen\u0027);\n    graph.addLink (\u0027P23219\u0027, \u0027Aspirin\u0027);\n    var renderer \u003d Viva.Graph.View.renderer(graph, {\n        container: document.getElementById(\u0027graphDiv\u0027)\n    });    \n    renderer.run();\n\u003c/script\u003e\n\u003cp id\u003d\u0027graphDiv\u0027 height\u003d\u0027500\u0027 \u003e\u003c/p\u003e\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1487641165571_-477975860",
      "id": "20170220-203925_89897429",
      "dateCreated": "Feb 20, 2017 8:39:25 PM",
      "dateStarted": "Mar 27, 2017 10:40:28 AM",
      "dateFinished": "Mar 27, 2017 10:40:28 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%pyspark\nimport json\nnodes \u003d [ \u0027{ \"id\": \"root\", \"group\": 1 }\u0027 ]\nlinks \u003d []\nfor p in protein_drug:\n    nodes.append (\u0027{{ \"id\": \"{0}\", \"group\": 1, \"size\" : {1} }}\u0027.format (p, len(protein_drug[p])))\n    links.append (\u0027{{ \"source\": \"{0}\", \"target\": \"root\", \"value\": 1 }}\u0027.format (p))\n    for d in protein_drug[p]:\n        nodes.append (\u0027{{ \"id\": \"{0}\", \"group\": 1 }}\u0027.format (d))\n        links.append (\u0027{{ \"source\": \"{0}\", \"target\": \"root\", \"value\": 1 }}\u0027.format (d))\n        links.append (\u0027{{ \"source\": \"{0}\", \"target\": \"{1}\", \"value\": 1 }}\u0027.format (p, d))\n\ntext \u003d Template (\"\"\"\n\u003cmeta charset\u003d\"utf-8\"\u003e\n\u003cstyle\u003e\n.links line {\n  stroke: #999;\n  stroke-opacity: 0.6;\n}\n.nodes circle {\n  stroke: #fff;\n  stroke-width: 1.5px;\n}\n.node text {\n  pointer-events: none;\n  font: 10px sans-serif;\n}\n\u003c/style\u003e\n\u003csvg width\u003d\"200\" height\u003d\"200\"\u003e\u003c/svg\u003e\n\u003cscript src\u003d\"https://d3js.org/d3.v4.min.js\"\u003e\u003c/script\u003e\n\u003cscript\u003e\n    var svg \u003d d3.select(\"svg\"),\n        width \u003d +svg.attr(\"width\"),\n        height \u003d +svg.attr(\"height\");\n    var color \u003d d3.scaleOrdinal(d3.schemeCategory20);\n    var simulation \u003d d3.forceSimulation()\n        .force(\"link\", d3.forceLink().id(function(d) { return d.id; }))\n        .force(\"charge\", d3.forceManyBody())\n        .force(\"center\", d3.forceCenter(width / 2, height / 2));\n\n    var graph \u003d {\n        nodes : [\n            ${nodes}\n        ],\n        links : [\n            ${links}\n        ]\n    };\n    var link \u003d svg.append(\"g\")\n        .attr(\"class\", \"links\")\n        .selectAll(\"line\")\n        .data(graph.links)\n        .enter().append(\"line\")\n        .attr(\"stroke-width\", function(d) { return Math.sqrt(d.value); });\n    var node \u003d svg.append(\"g\")\n        .attr(\"class\", \"nodes\")\n        .selectAll(\"circle\")\n        .data(graph.nodes)\n        .enter().append(\"circle\")\n        .attr(\"r\", 5)\n        .attr(\"fill\", function(d) { return color(d.group); })\n        .call(d3.drag()\n        .on(\"start\", dragstarted)\n        .on(\"drag\", dragged)\n        .on(\"end\", dragended));\n    node.append(\"title\")\n        .text(function(d) { return d.id; });\n    \n    node.append(\"text\")\n        .attr(\"dx\", 12)\n        .attr(\"dy\", \".35em\")\n        .text(function(d) { return d.id });\n      \n    simulation\n        .nodes(graph.nodes)\n        .on(\"tick\", ticked);\n    simulation.force(\"link\")\n        .links(graph.links);\n    function ticked() {\n        link\n            .attr(\"x1\", function(d) { return d.source.x; })\n            .attr(\"y1\", function(d) { return d.source.y; })\n            .attr(\"x2\", function(d) { return d.target.x; })\n            .attr(\"y2\", function(d) { return d.target.y; });\n        node\n            .attr(\"cx\", function(d) { return d.x; })\n            .attr(\"cy\", function(d) { return d.y; });\n    }\n\nfunction dragstarted(d) {\n  if (!d3.event.active) simulation.alphaTarget(0.3).restart();\n  d.fx \u003d d.x;\n  d.fy \u003d d.y;\n}\n\nfunction dragged(d) {\n  d.fx \u003d d3.event.x;\n  d.fy \u003d d3.event.y;\n}\n\nfunction dragended(d) {\n  if (!d3.event.active) simulation.alphaTarget(0);\n  d.fx \u003d null;\n  d.fy \u003d null;\n}\n\n\u003c/script\u003e\n\u003cp\u003ehi\u003c/p\u003e\"\"\").safe_substitute (\n    nodes\u003d\",\\n\".join (nodes),\n    links \u003d \",\\n\".join (links)\n)\nprint (\"%html {0}\".format (text))",
      "user": "ad\\hongyi",
      "dateUpdated": "Mar 27, 2017 10:40:31 AM",
      "config": {
        "colWidth": 12.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "python"
        },
        "editorMode": "ace/mode/python"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\n\u003cmeta charset\u003d\"utf-8\"\u003e\n\u003cstyle\u003e\n.links line {\n  stroke: #999;\n  stroke-opacity: 0.6;\n}\n.nodes circle {\n  stroke: #fff;\n  stroke-width: 1.5px;\n}\n.node text {\n  pointer-events: none;\n  font: 10px sans-serif;\n}\n\u003c/style\u003e\n\u003csvg width\u003d\"200\" height\u003d\"200\"\u003e\u003c/svg\u003e\n\u003cscript src\u003d\"https://d3js.org/d3.v4.min.js\"\u003e\u003c/script\u003e\n\u003cscript\u003e\n    var svg \u003d d3.select(\"svg\"),\n        width \u003d +svg.attr(\"width\"),\n        height \u003d +svg.attr(\"height\");\n    var color \u003d d3.scaleOrdinal(d3.schemeCategory20);\n    var simulation \u003d d3.forceSimulation()\n        .force(\"link\", d3.forceLink().id(function(d) { return d.id; }))\n        .force(\"charge\", d3.forceManyBody())\n        .force(\"center\", d3.forceCenter(width / 2, height / 2));\n    var graph \u003d {\n        nodes : [\n            { \"id\": \"root\", \"group\": 1 },\n{ \"id\": \"P06732\", \"group\": 1, \"size\" : 1 },\n{ \"id\": \"Creatine\", \"group\": 1 },\n{ \"id\": \"P12277\", \"group\": 1, \"size\" : 1 },\n{ \"id\": \"Creatine\", \"group\": 1 },\n{ \"id\": \"P50440\", \"group\": 1, \"size\" : 1 },\n{ \"id\": \"Creatine\", \"group\": 1 },\n{ \"id\": \"P18825\", \"group\": 1, \"size\" : 1 },\n{ \"id\": \"Brimonidine\", \"group\": 1 },\n{ \"id\": \"Q06432\", \"group\": 1, \"size\" : 1 },\n{ \"id\": \"Amlodipine\", \"group\": 1 },\n{ \"id\": \"P00915\", \"group\": 1, \"size\" : 1 },\n{ \"id\": \"Amlodipine\", \"group\": 1 },\n{ \"id\": \"P18089\", \"group\": 1, \"size\" : 1 },\n{ \"id\": \"Brimonidine\", \"group\": 1 },\n{ \"id\": \"Q9UBS5\", \"group\": 1, \"size\" : 1 },\n{ \"id\": \"Baclofen\", \"group\": 1 },\n{ \"id\": \"Q00975\", \"group\": 1, \"size\" : 1 },\n{ \"id\": \"Amlodipine\", \"group\": 1 },\n{ \"id\": \"P35354\", \"group\": 1, \"size\" : 2 },\n{ \"id\": \"Acetaminophen\", \"group\": 1 },\n{ \"id\": \"Aspirin\", \"group\": 1 },\n{ \"id\": \"P17540\", \"group\": 1, \"size\" : 1 },\n{ \"id\": \"Creatine\", \"group\": 1 },\n{ \"id\": \"P08913\", \"group\": 1, \"size\" : 1 },\n{ \"id\": \"Brimonidine\", \"group\": 1 },\n{ \"id\": \"P12532\", \"group\": 1, \"size\" : 1 },\n{ \"id\": \"Creatine\", \"group\": 1 },\n{ \"id\": \"O75899\", \"group\": 1, \"size\" : 1 },\n{ \"id\": \"Baclofen\", \"group\": 1 },\n{ \"id\": \"P48029\", \"group\": 1, \"size\" : 1 },\n{ \"id\": \"Creatine\", \"group\": 1 },\n{ \"id\": \"Q14353\", \"group\": 1, \"size\" : 1 },\n{ \"id\": \"Creatine\", \"group\": 1 },\n{ \"id\": \"P23219\", \"group\": 1, \"size\" : 2 },\n{ \"id\": \"Acetaminophen\", \"group\": 1 },\n{ \"id\": \"Aspirin\", \"group\": 1 }\n        ],\n        links : [\n            { \"source\": \"P06732\", \"target\": \"root\", \"value\": 1 },\n{ \"source\": \"Creatine\", \"target\": \"root\", \"value\": 1 },\n{ \"source\": \"P06732\", \"target\": \"Creatine\", \"value\": 1 },\n{ \"source\": \"P12277\", \"target\": \"root\", \"value\": 1 },\n{ \"source\": \"Creatine\", \"target\": \"root\", \"value\": 1 },\n{ \"source\": \"P12277\", \"target\": \"Creatine\", \"value\": 1 },\n{ \"source\": \"P50440\", \"target\": \"root\", \"value\": 1 },\n{ \"source\": \"Creatine\", \"target\": \"root\", \"value\": 1 },\n{ \"source\": \"P50440\", \"target\": \"Creatine\", \"value\": 1 },\n{ \"source\": \"P18825\", \"target\": \"root\", \"value\": 1 },\n{ \"source\": \"Brimonidine\", \"target\": \"root\", \"value\": 1 },\n{ \"source\": \"P18825\", \"target\": \"Brimonidine\", \"value\": 1 },\n{ \"source\": \"Q06432\", \"target\": \"root\", \"value\": 1 },\n{ \"source\": \"Amlodipine\", \"target\": \"root\", \"value\": 1 },\n{ \"source\": \"Q06432\", \"target\": \"Amlodipine\", \"value\": 1 },\n{ \"source\": \"P00915\", \"target\": \"root\", \"value\": 1 },\n{ \"source\": \"Amlodipine\", \"target\": \"root\", \"value\": 1 },\n{ \"source\": \"P00915\", \"target\": \"Amlodipine\", \"value\": 1 },\n{ \"source\": \"P18089\", \"target\": \"root\", \"value\": 1 },\n{ \"source\": \"Brimonidine\", \"target\": \"root\", \"value\": 1 },\n{ \"source\": \"P18089\", \"target\": \"Brimonidine\", \"value\": 1 },\n{ \"source\": \"Q9UBS5\", \"target\": \"root\", \"value\": 1 },\n{ \"source\": \"Baclofen\", \"target\": \"root\", \"value\": 1 },\n{ \"source\": \"Q9UBS5\", \"target\": \"Baclofen\", \"value\": 1 },\n{ \"source\": \"Q00975\", \"target\": \"root\", \"value\": 1 },\n{ \"source\": \"Amlodipine\", \"target\": \"root\", \"value\": 1 },\n{ \"source\": \"Q00975\", \"target\": \"Amlodipine\", \"value\": 1 },\n{ \"source\": \"P35354\", \"target\": \"root\", \"value\": 1 },\n{ \"source\": \"Acetaminophen\", \"target\": \"root\", \"value\": 1 },\n{ \"source\": \"P35354\", \"target\": \"Acetaminophen\", \"value\": 1 },\n{ \"source\": \"Aspirin\", \"target\": \"root\", \"value\": 1 },\n{ \"source\": \"P35354\", \"target\": \"Aspirin\", \"value\": 1 },\n{ \"source\": \"P17540\", \"target\": \"root\", \"value\": 1 },\n{ \"source\": \"Creatine\", \"target\": \"root\", \"value\": 1 },\n{ \"source\": \"P17540\", \"target\": \"Creatine\", \"value\": 1 },\n{ \"source\": \"P08913\", \"target\": \"root\", \"value\": 1 },\n{ \"source\": \"Brimonidine\", \"target\": \"root\", \"value\": 1 },\n{ \"source\": \"P08913\", \"target\": \"Brimonidine\", \"value\": 1 },\n{ \"source\": \"P12532\", \"target\": \"root\", \"value\": 1 },\n{ \"source\": \"Creatine\", \"target\": \"root\", \"value\": 1 },\n{ \"source\": \"P12532\", \"target\": \"Creatine\", \"value\": 1 },\n{ \"source\": \"O75899\", \"target\": \"root\", \"value\": 1 },\n{ \"source\": \"Baclofen\", \"target\": \"root\", \"value\": 1 },\n{ \"source\": \"O75899\", \"target\": \"Baclofen\", \"value\": 1 },\n{ \"source\": \"P48029\", \"target\": \"root\", \"value\": 1 },\n{ \"source\": \"Creatine\", \"target\": \"root\", \"value\": 1 },\n{ \"source\": \"P48029\", \"target\": \"Creatine\", \"value\": 1 },\n{ \"source\": \"Q14353\", \"target\": \"root\", \"value\": 1 },\n{ \"source\": \"Creatine\", \"target\": \"root\", \"value\": 1 },\n{ \"source\": \"Q14353\", \"target\": \"Creatine\", \"value\": 1 },\n{ \"source\": \"P23219\", \"target\": \"root\", \"value\": 1 },\n{ \"source\": \"Acetaminophen\", \"target\": \"root\", \"value\": 1 },\n{ \"source\": \"P23219\", \"target\": \"Acetaminophen\", \"value\": 1 },\n{ \"source\": \"Aspirin\", \"target\": \"root\", \"value\": 1 },\n{ \"source\": \"P23219\", \"target\": \"Aspirin\", \"value\": 1 }\n        ]\n    };\n    var link \u003d svg.append(\"g\")\n        .attr(\"class\", \"links\")\n        .selectAll(\"line\")\n        .data(graph.links)\n        .enter().append(\"line\")\n        .attr(\"stroke-width\", function(d) { return Math.sqrt(d.value); });\n    var node \u003d svg.append(\"g\")\n        .attr(\"class\", \"nodes\")\n        .selectAll(\"circle\")\n        .data(graph.nodes)\n        .enter().append(\"circle\")\n        .attr(\"r\", 5)\n        .attr(\"fill\", function(d) { return color(d.group); })\n        .call(d3.drag()\n        .on(\"start\", dragstarted)\n        .on(\"drag\", dragged)\n        .on(\"end\", dragended));\n    node.append(\"title\")\n        .text(function(d) { return d.id; });\n    node.append(\"text\")\n        .attr(\"dx\", 12)\n        .attr(\"dy\", \".35em\")\n        .text(function(d) { return d.id });\n    simulation\n        .nodes(graph.nodes)\n        .on(\"tick\", ticked);\n    simulation.force(\"link\")\n        .links(graph.links);\n    function ticked() {\n        link\n            .attr(\"x1\", function(d) { return d.source.x; })\n            .attr(\"y1\", function(d) { return d.source.y; })\n            .attr(\"x2\", function(d) { return d.target.x; })\n            .attr(\"y2\", function(d) { return d.target.y; });\n        node\n            .attr(\"cx\", function(d) { return d.x; })\n            .attr(\"cy\", function(d) { return d.y; });\n    }\nfunction dragstarted(d) {\n  if (!d3.event.active) simulation.alphaTarget(0.3).restart();\n  d.fx \u003d d.x;\n  d.fy \u003d d.y;\n}\nfunction dragged(d) {\n  d.fx \u003d d3.event.x;\n  d.fy \u003d d3.event.y;\n}\nfunction dragended(d) {\n  if (!d3.event.active) simulation.alphaTarget(0);\n  d.fx \u003d null;\n  d.fy \u003d null;\n}\n\u003c/script\u003e\n\u003cp\u003ehi\u003c/p\u003e\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1487641239378_92145389",
      "id": "20170220-204039_2094760541",
      "dateCreated": "Feb 20, 2017 8:40:39 PM",
      "dateStarted": "Mar 27, 2017 10:40:31 AM",
      "dateFinished": "Mar 27, 2017 10:40:31 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%pyspark\n",
      "user": "admin",
      "dateUpdated": "Feb 20, 2017 8:42:53 PM",
      "config": {},
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1487641373310_-1027691737",
      "id": "20170220-204253_1869444761",
      "dateCreated": "Feb 20, 2017 8:42:53 PM",
      "status": "READY",
      "progressUpdateIntervalMs": 500
    }
  ],
  "name": "/NCATSTranslator/VisualizationDevelopment",
  "id": "2C9UTNT71",
  "angularObjects": {
    "2C8PNVW4G:shared_process": [],
    "2C9M4A84U:shared_process": [],
    "2C8JB5J2A:shared_process": [],
    "2C8UPVAV8:shared_process": [],
    "2CB6QSJQK:shared_process": [],
    "2CB4GRYA4:shared_process": [],
    "2CAZ1XA1G:shared_process": [],
    "2CBGUDB9H:shared_process": [],
    "2C9VT2CHD:shared_process": [],
    "2CBBPS1GQ:shared_process": [],
    "2CAYF7YMG:shared_process": [],
    "2C7NS2RPM:shared_process": [],
    "2C9WWVYVN::2C9UTNT71": [],
    "2CB55MCKF:shared_process": [],
    "2C9P6TDB4:shared_process": [],
    "2C7YD2D51:shared_process": [],
    "2C9UAC7QR:shared_process": [],
    "2C8K1VZ6J:shared_process": [],
    "2CA9JMF94:shared_process": []
  },
  "config": {
    "looknfeel": "default",
    "personalizedMode": "false"
  },
  "info": {}
}